#########################################################################
#Ejercicio Final Semana 2
#########################################################################
#1. Cargar la base de datos Peatones_2020.csv despues de descargarla de 
#la web del ayuntamiento de Madrid: datos.madrid.es
#las instrucciones debemos escribirlas para visualizar el reporte.
#IMPORTANTE: Los reportes solo generan dialogo con la consola, no elementos externos como 
#la visualizacion de una base de datos con View o un help

#library(readr)

# https://datos.madrid.es/egob/catalogo/300321-4-aforos-peatones-bicicletas.csv

# De la web datos.madrid.es ir a catalogo de datos -> afororo de peatones y bicicletas
# Se descarga un fichero PEATONES_2020.csv
# Cargar este fichero en tu sistema, mejor por el icono de import dataSet
# Si no puedes usa la siguiente instruccion

# Para evitar problemas con las tildes, es necesario poner fileEncoding="latin1"
# Hay varias opciones para realizar la lectura. 
# La funcion read.csv2 toma ; como separador por defecto:

PEATONES_2020 <- read.csv("PEATONES_2020.csv", sep= ";",  fileEncoding="latin1")
#PEATONES_2020 <- read.csv2("PEATONES_2020.csv", header=TRUE,  fileEncoding="latin1")
PEATONES_2020$FECHA<-as.Date(PEATONES_2020$FECHA, "%d/%m/%y")
PEATONES_2020$HORA<-as.character(PEATONES_2020$HORA)
#2. Comprobamos su contenido para familiarizarnos con sus datos:
#View(PEATONES_2020)
str(PEATONES_2020)

#3. Calcular la dimension de la tabla de datos de peatones
# Cuantas observaciones tiene? Cuantas variables? Usar la función dim()
dim(PEATONES_2020)
#4. Cargar la librería dplyr
library(dplyr)
#4. Filter: Crear un objeto que contenga solo los datos del distrito "Centro"
centros<-unique(PEATONES_2020$DISTRITO)
centro<-filter(PEATONES_2020, DISTRITO=="Centro"| DISTRITO==" Centro")
#5. Crear un objeto que contenga solo los datos del distrito "Centro"
# a las 23:00, tened en cuenta el formato que podéis comprobar con str()
head(centro$HORA)
centro23<-filter(centro, HORA=="23:00")

# 6. Instalar la librería ggplot2 y crear un histograma que represente 
# los peatones en el centro a las 23h y los clasifique por codigo postal
# usando el color en el parámetro fill y/o color
# en el periodo que contiene la base de datos (enero-marzo)
#PRIMERO LE CAMBIO EL NOMBRE A CODIGO POSTAL PARA QUITAR LA TILDE
names(centro23)[9]<-"CODIGO_POSTAL"
#SEGUNDO CONVIERTO A FACTOR EL CODIGO POSTAL
centro23$CODIGO_POSTAL<-as.factor(centro23$CODIGO_POSTAL)
# TERCERO INSTALO GGPLOT2
library(ggplot2)
# CUARTO INSTANCIO A GGPLOT PARA PINTAR EL GRAFICO
ggplot(data=centro23)+
  geom_histogram(mapping=aes(x=PEATONES, color=CODIGO_POSTAL))
# QUINTO HAGO LO MISMO USANDO FILL EN VEZ DE COLOR
ggplot(data=centro23)+
  geom_histogram(mapping=aes(x=PEATONES, fill=CODIGO_POSTAL))

# 7. DISCUTE CUAL ES EL CODIGO POSTAL QUE MÁS PEATONES TIENE 
# EN EL DISTRITO CENTRO.

#--- YO CREO QUE EL 4 el que más y  EL 15 EL QUE MENOS

#8. USA  LA FUNCIoN mean() PARA CALCULAR EL NUMERO DE PEATONES MEDIO
# EN LOS TRES CODIGOS POSTALES 004,013 y 015 DEL DISTRITO CENTRO a las 23 horas
cp4<-mean(select(filter(centro23, CODIGO_POSTAL=="28004"), PEATONES)$PEATONES, na.rm = T)
cp4
cp13<-mean(select(filter(centro23, CODIGO_POSTAL=="28013"), PEATONES)$PEATONES, na.rm = T)

cp13
cp15<-mean(select(filter(centro23, CODIGO_POSTAL=="28015"), PEATONES)$PEATONES, na.rm = T)
cp15
# 9. Representa los peatones en el distrito centro por fechas, es decir:
# en el eje x pon las fechas y en el eje y los peatones, haz un grafico de puntos
# donde se vea el descenso tras el estado de alarma
ggplot(data=centro23)+
  geom_point(mapping=aes(x=FECHA, y=PEATONES), color="blue" )
ggplot(data=centro23)+
  geom_point(mapping=aes(x=FECHA, y=PEATONES, color=months(FECHA)))

#10. Calcula el numero de peatones EN TOTAL el 8 de marzo (sumando los de todas las horas)

marzo8<-select(PEATONES_2020,FECHA, PEATONES, DISTRITO)
marzo8<-filter(marzo8, FECHA=="2020-03-08")
sum(marzo8$PEATONES, na.rm=T)


#11. Representar un grafico con los datos del 8 de marzo por DISTRITO
# ejecuta y comenta las instrucciones siguientes y despues haz el grafico
chamberi<-marzo8$DISTRITO[10]

for (i in (1: length(marzo8$DISTRITO))) {
  if (marzo8$DISTRITO[i]==chamberi) {marzo8$DISTRITO[i]="Chamberi"}
}
######################esta es la solución
t<-ggplot(data=marzo8)+
  geom_point(mapping=aes(x=DISTRITO, y=PEATONES,color=DISTRITO))
 
t + labs(title ="Peatones el 8 de Marzo en Madrid por distritos", x = "Distrito", y = "Número de Peatones")
#12. Repite el ejercicio anterior para el dia 30 de marzo
marzo30<-select(PEATONES_2020,FECHA, PEATONES, DISTRITO)
marzo30<-filter(marzo30, FECHA=="2020-03-30")
sum(marzo30$PEATONES, na.rm=T)


#11. Representar un grafico con los datos del 8 de marzo por DISTRITO
# ejecuta y comenta las instrucciones siguientes y despues haz el grafico
chamberi<-marzo30$DISTRITO[10]

for (i in (1: length(marzo8$DISTRITO))) {
  if (marzo30$DISTRITO[i]==chamberi) {marzo30$DISTRITO[i]="Chamberi"}
}
######################esta es la solución
t<-ggplot(data=marzo30)+
  geom_point(mapping=aes(x=DISTRITO, y=PEATONES,color=DISTRITO))

t + labs(title ="Peatones el 30 de Marzo en Madrid por distritos", x = "Distrito", y = "Número de Peatones")


# 13. Selecciona los datos a las 22.00 en la "Calle Mayor"
# representa un grafico de puntos donde la fecha esta en el eje x y los peatones
# en el eje y, incluye una curva de regresion con smooth

callemayor22h<-filter(PEATONES_2020, NOMBRE_VIAL=="Calle Mayor", HORA=="22:00")
ggplot(data=callemayor22h)+
  geom_point(mapping=aes(x=FECHA, y=PEATONES),color="blue")+
  geom_smooth(mapping=aes(x=FECHA, y=PEATONES), color="red")

#14.  FACETAS
# hacemos el gráfico del punto 9 pero usando como facetas el distrito
# como vamos a trabajar con la base de datos completa, tenemos que 
# quitar la tilde de Chamberi
PEATONES_2020$DISTRITO<-as.character(PEATONES_2020$DISTRITO)
for (i in (1: length(PEATONES_2020$DISTRITO))) {
  if (PEATONES_2020$DISTRITO[i]==chamberi) {PEATONES_2020$DISTRITO[i]="Chamberi"}
}
PEATONES_2020$DISTRITO<-as.factor(PEATONES_2020$DISTRITO)
ggplot(data=PEATONES_2020)+
  geom_point(mapping=aes(x=FECHA, y=PEATONES, color=months(FECHA)))+
facet_wrap(DISTRITO~.)

##############################  FIN   ########################



